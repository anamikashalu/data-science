{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1e7RGSsoFHDDCv19KYrggAHOy90CYTP29","timestamp":1699607268218}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"kskgxPLgZRv_"},"outputs":[],"source":["import numpy as numpy\n","import pandas as pd\n","from sklearn.cluster import KMeans\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["df=pd.read_csv(\"/content/CarbonEmissionIndia - CarbonEmissionIndia.csv\")\n","df.head()\n","df=df.iloc[:,1:5]\n","df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223},"id":"2U6__tlQZaVd","executionInfo":{"status":"ok","timestamp":1699606462392,"user_tz":-330,"elapsed":346,"user":{"displayName":"Sreelakshmi p","userId":"15613836138081509083"}},"outputId":"7b2d31b8-c7e1-4e91-cf9a-e7164409904e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   per capita CO2 (kg per person)  per capita CO (kg per person)  \\\n","0                          974.17                          27.18   \n","1                          405.90                          17.43   \n","2                          340.91                          16.63   \n","3                          179.01                           8.83   \n","4                         1963.88                          17.56   \n","\n","   per capita CH4 (kg per person)  \n","0                           16.97  \n","1                           25.82  \n","2                           21.29  \n","3                            9.59  \n","4                           22.37  "],"text/html":["\n","  <div id=\"df-e31c2bda-0255-47fd-b0ec-6df416f83a23\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>per capita CO2 (kg per person)</th>\n","      <th>per capita CO (kg per person)</th>\n","      <th>per capita CH4 (kg per person)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>974.17</td>\n","      <td>27.18</td>\n","      <td>16.97</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>405.90</td>\n","      <td>17.43</td>\n","      <td>25.82</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>340.91</td>\n","      <td>16.63</td>\n","      <td>21.29</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>179.01</td>\n","      <td>8.83</td>\n","      <td>9.59</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1963.88</td>\n","      <td>17.56</td>\n","      <td>22.37</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e31c2bda-0255-47fd-b0ec-6df416f83a23')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e31c2bda-0255-47fd-b0ec-6df416f83a23 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e31c2bda-0255-47fd-b0ec-6df416f83a23');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c5f1c713-ccb7-4a7d-b4f5-462847bc1342\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c5f1c713-ccb7-4a7d-b4f5-462847bc1342')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c5f1c713-ccb7-4a7d-b4f5-462847bc1342 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["k=3 #The number of clusters you want\n","kmeans=KMeans(n_clusters=k,n_init=10)\n","kmeans.fit(df)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"ENSJy0EfazcQ","executionInfo":{"status":"ok","timestamp":1699606466128,"user_tz":-330,"elapsed":528,"user":{"displayName":"Sreelakshmi p","userId":"15613836138081509083"}},"outputId":"4736120d-cdcd-4c57-dd47-b5315174b70d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["KMeans(n_clusters=3, n_init=10)"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=3, n_init=10)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KMeans</label><div class=\"sk-toggleable__content\"><pre>KMeans(n_clusters=3, n_init=10)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["labels=kmeans.labels_\n","centers=kmeans.cluster_centers_\n","pred_cluster=kmeans.predict(df)"],"metadata":{"id":"pGpFntapbb2H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import silhouette_score\n","print(kmeans.inertia_)\n","print(silhouette_score(df,pred_cluster))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0E4vgZP-bqsG","executionInfo":{"status":"ok","timestamp":1699606472126,"user_tz":-330,"elapsed":345,"user":{"displayName":"Sreelakshmi p","userId":"15613836138081509083"}},"outputId":"b50a37f4-842c-4255-8fc9-676baeeb53e5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1439925.3103342857\n","0.5997110542863124\n"]}]},{"cell_type":"code","source":["#silhouette_score\n","from pandas.core.common import random_state\n","from sklearn.metrics import silhouette_score\n","sil_score=[]\n","clusters=range(2,11)\n","for k in clusters:\n","  kmeans_k=KMeans(n_clusters=k,n_init=8,random_state=10)\n","  kmeans_k.fit(df)\n","  cluster_labels=kmeans_k.predict(df)\n","  sil_score.append(silhouette_score(df,cluster_labels))\n","\n","\n","sil_data=pd.DataFrame({'Clusters:':clusters,'Silhouette-score':sil_score})\n","print(sil_data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fWsW0leFbz5m","executionInfo":{"status":"ok","timestamp":1699606862969,"user_tz":-330,"elapsed":378,"user":{"displayName":"Sreelakshmi p","userId":"15613836138081509083"}},"outputId":"bd428b8a-2174-48b6-95e9-445cc2424069"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   Clusters:  Silhouette-score\n","0          2          0.653581\n","1          3          0.619666\n","2          4          0.645096\n","3          5          0.623896\n","4          6          0.631320\n","5          7          0.611253\n","6          8          0.554086\n","7          9          0.566327\n","8         10          0.563933\n"]}]},{"cell_type":"code","source":["#Determine 'k using elbow method\n","wcss=[]\n","clusters=range(2,11)\n"," #Initiate a for loop that ranges from 1 to 10\n","for k in clusters:\n","  kmeans_k=KMeans(n_clusters=k,n_init=8,random_state=10)\n","  kmeans_k.fit(df)\n","  wcss.append(kmeans_k.inertia_)\n","plt.figure(figsize=(14,5))\n","plt.plot(clusters,wcss)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":274},"id":"ltUqWu28c1ln","executionInfo":{"status":"ok","timestamp":1699606695712,"user_tz":-330,"elapsed":811,"user":{"displayName":"Sreelakshmi p","userId":"15613836138081509083"}},"outputId":"6e7311b1-b6fb-4d82-99e6-97cc0d63cbef"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1400x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}